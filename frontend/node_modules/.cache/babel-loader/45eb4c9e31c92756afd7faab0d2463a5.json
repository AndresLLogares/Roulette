{"ast":null,"code":"var _jsxFileName = \"/home/andres/roulette/src/components/ButtonMetaMask.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useEthers } from \"@usedapp/core\";\nimport Metamask from \"../images/metamask.svg\";\nimport Colors from \"../colors/colors\";\nimport { Typography, Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Pointer from \"../images/pointer.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ButtonMetamask = _ref => {\n  _s();\n\n  let {\n    connected\n  } = _ref;\n  const classes = useStyles();\n  const {\n    account,\n    activateBrowserWallet\n  } = useEthers();\n  const [currentAccount, setCurrentAccount] = useState(\"\");\n  useEffect(() => {\n    account === \"string\" ? connected(true) : connected(false);\n  }, account);\n\n  const handleClick = async () => {\n    await activateBrowserWallet();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Button, {\n    onClick: handleClick,\n    className: classes.button,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      children: \"Connect Metamask\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: classes.icon,\n      src: Metamask,\n      alt: \"Metamask\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ButtonMetamask, \"xplnEaSuN9vIVIcrFCjH/ZBALJc=\", false, function () {\n  return [useStyles, useEthers];\n});\n\n_c = ButtonMetamask;\nconst useStyles = makeStyles(theme => ({\n  button: {\n    width: \"20rem\",\n    height: \"5rem\",\n    display: \"flex\",\n    alignItems: \"center\",\n    fontFamily: [\"Poppins\", \"cursive\"].join(\",\"),\n    fontSize: \"3vh\",\n    textTransform: \"none\",\n    justifyContent: \"center\",\n    flexDirection: \"row\",\n    color: Colors.black,\n    borderRadius: \"10px 10px 10px 10px\",\n    background: Colors.white,\n    border: `0.2rem solid ${Colors.black}`,\n    boxShadow: `5px 5px 0 ${Colors.black}, -5px -5px 0 ${Colors.black}, -5px 5px 0 ${Colors.black}, 5px -5px 0 ${Colors.black}`,\n    transition: \"500ms ease-in-out\",\n    \"&:hover\": {\n      boxShadow: `20px 5px 0 ${Colors.orange}, -20px -5px 0 ${Colors.orange}`,\n      cursor: `url(${Pointer}), pointer`,\n      background: Colors.white\n    },\n    \"&:focus\": {\n      outline: \"none\"\n    }\n  },\n  icon: {\n    marginLeft: \"5%\",\n    width: \"3rem\",\n    height: \"3rem\"\n  }\n}));\nexport default ButtonMetamask;\n\nvar _c;\n\n$RefreshReg$(_c, \"ButtonMetamask\");","map":{"version":3,"sources":["/home/andres/roulette/src/components/ButtonMetaMask.js"],"names":["React","useEffect","useState","useEthers","Colors","Typography","Button","makeStyles","Pointer","ButtonMetamask","connected","classes","useStyles","account","activateBrowserWallet","currentAccount","setCurrentAccount","handleClick","button","icon","Metamask","theme","width","height","display","alignItems","fontFamily","join","fontSize","textTransform","justifyContent","flexDirection","color","black","borderRadius","background","white","border","boxShadow","transition","orange","cursor","outline","marginLeft"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useEthers } from \"@usedapp/core\";\nimport Metamask from \"../images/metamask.svg\";\nimport Colors from \"../colors/colors\";\nimport { Typography, Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Pointer from \"../images/pointer.png\";\nconst ButtonMetamask = ({ connected }) => {\n  const classes = useStyles();\n\n  const { account, activateBrowserWallet } = useEthers();\n\n  const [currentAccount, setCurrentAccount] = useState(\"\");\n\n  useEffect(() => {\n    account === \"string\" ? connected(true) : connected(false);\n  }, account);\n\n  const handleClick = async () => {\n    await activateBrowserWallet();\n  };\n\n  return (\n    <Button onClick={handleClick} className={classes.button}>\n      <Typography>Connect Metamask</Typography>\n      <img className={classes.icon} src={Metamask} alt=\"Metamask\" />\n    </Button>\n  );\n};\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    width: \"20rem\",\n    height: \"5rem\",\n    display: \"flex\",\n    alignItems: \"center\",\n    fontFamily: [\"Poppins\", \"cursive\"].join(\",\"),\n    fontSize: \"3vh\",\n    textTransform: \"none\",\n    justifyContent: \"center\",\n    flexDirection: \"row\",\n    color: Colors.black,\n    borderRadius: \"10px 10px 10px 10px\",\n    background: Colors.white,\n    border: `0.2rem solid ${Colors.black}`,\n    boxShadow: `5px 5px 0 ${Colors.black}, -5px -5px 0 ${Colors.black}, -5px 5px 0 ${Colors.black}, 5px -5px 0 ${Colors.black}`,\n    transition: \"500ms ease-in-out\",\n    \"&:hover\": {\n      boxShadow: `20px 5px 0 ${Colors.orange}, -20px -5px 0 ${Colors.orange}`,\n      cursor: `url(${Pointer}), pointer`,\n      background: Colors.white,\n    },\n    \"&:focus\": {\n      outline: \"none\",\n    },\n  },\n  icon: {\n    marginLeft: \"5%\",\n    width: \"3rem\",\n    height: \"3rem\",\n  },\n}));\n\nexport default ButtonMetamask;\n"]},"metadata":{},"sourceType":"module"}